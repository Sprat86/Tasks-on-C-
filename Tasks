  ЗАДАЧИ НА ЯЗЫКЕ C#.
  
  ЗАДАЧИ НА ЦИКЛЫ:
  
  
  1.
  ЗАДАЧА:
  Напишите программу, которая выводит "Hello, World!" (без кавычек) 19 раз, каждый на своей строке
  
  РЕШЕНИЕ:
  using System;
public class MainClass
{
    public static void Main()
    {
        // put your c# code here
        for (int i = 0; i < 19; i++) {
        Console.WriteLine("Hello, BeeGeek!");
        };
    }
}


2. Четные числа
ЗАДАЧА:
Напишите программу, которая выводит все четные числа на заданном отрезке.

Входные данные
Вводятся целые числа a и b. Гарантируется, что a не превосходит b (a≤b). Каждое из чисел по модулю не превышает 30000 .

Выходные данные
Выведите все четные числа от a до b включительно, причем каждое число в отдельной строке 

Sample Input:
7
11
Sample Output:
8
10

РЕШЕНИЕ:
using System;
public class MainClass
{
    public static void Main()
    {
        // put your c# code here
        int a = Convert.ToInt32(Console.ReadLine());
        int b = Convert.ToInt32(Console.ReadLine());
        for (int i = a; i <= b; i++) {
        if (i % 2 == 0) {
        Console.WriteLine(i);
        }
        };
    }
}


3. Делители числа
ЗАДАЧА:
По данному целому числу x, выведите все его делители.

Входные данные 
Вводится натуральное число x.

Выходные данные 
Выведите все натуральные делители числа x в порядке возрастания (включая 1 и само число), причем каждый делитель в отдельной строке.
Sample Input:
4
Sample Output:
1
2
4

РЕШЕНИЕ:
using System;
public class MainClass
{
    public static void Main()
    {
        // put your c# code here
        int a = Convert.ToInt32(Console.ReadLine());
        for (int i = 1; i <= a; i++) {
        if (a % i == 0) {
        Console.WriteLine(i);
        };
        };
    }
}


4. Обратная последовательность
ЗАДАЧА:
Выведите обратную последовательность чисел на отрезке от a до b.

Входные данные
Вводятся целые числа a и b. Гарантируется, что a не превосходит b (a≤b). Каждое из чисел по модулю не превышает 30000.
Выходные данные
Выведите на каждой строке все целые числа от b до a включительно.
Sample Input:
3
7
Sample Output:
7
6
5
4
3

РЕШЕНИЕ:
using System;
public class MainClass
{
    public static void Main()
    {
        // put your c# code here
        int a = Convert.ToInt32(Console.ReadLine());
        int b = Convert.ToInt32(Console.ReadLine());
        for (int i = b; i >= a; i--) {
        Console.WriteLine(i);
        };
    }
}


5. Квадраты
ЗАДАЧА:
По данному числу N найдите все квадраты чисел от 1 до N включительно. 

Входные данные 
Вводится натуральное число N, не превышающее 10 в степени 4.
Выходные данные 
Выведите квадраты чисел от 1 до N включительно.
Sample Input:
3
Sample Output:
1
4
9

РЕШЕНИЕ:
using System;
public class MainClass
{
    public static void Main()
    {
        // put your c# code here
        int a = Convert.ToInt32(Console.ReadLine());
        for (int i = 1; i <= a; i++) {
        Console.WriteLine(Math.Pow(i, 2));
        };
    }
}


6. Делители
ЗАДАЧА:
Выведите количество натуральных делителей числа x, включая 1 и само число. 

Входные данные 
Вводится натуральное число x, не превышающее 2⋅10 в степени 5.
Выходные данные 
Выведите количество натуральных делителей числа x, включая 1 и само число.
Sample Input:
32
Sample Output:
6

РЕШЕНИЕ:
using System;
public class MainClass
{
    public static void Main()
    {
        // put your c# code here
        int a = Convert.ToInt32(Console.ReadLine());
        int count = 0;
        for (int i = 1; i <= a; i++) {
        if (a % i == 0) {
        count++;
        }
        };
        Console.Write(count);
    }
}


7. Сумма
ЗАДАЧА:
Найдите сумму введенных чисел.

Входные данные 
Вводится натуральное число N(N≤10 в степени 5), а затем N чисел, сумму которых необходимо вычислить.
Все числа по модулю не превышают 2⋅10 в степени 4.
Выходные данные 
Выведите сумму введенных чисел.
Sample Input:
3
1
4
5
Sample Output:
10

РЕШЕНИЕ:
using System;
public class MainClass
{
    public static void Main()
    {
        // put your c# code here
        int a = Convert.ToInt32(Console.ReadLine());       
        int sum = 0;
        for (int i = 1; i <= a; i++) {
        int num = Convert.ToInt32(Console.ReadLine());
            sum += num;
        };
       Console.Write(sum);
    }
}


8. Сумма с условием
ЗАДАЧА:
Найдите сумму введенных чисел, которые кратны 2 , но не кратны 3 . 

Входные данные 
Вводится натуральное число N(N≤10 в стпени 5), а затем N чисел, каждое из которых по модулю не превышает 2∗10 в стпени 4.
Выходные данные 
Вычислите сумму введенных чисел, кратных 2 , но не кратных 3 .
Sample Input:
3
2
3
4
Sample Output:
6

РЕШЕНИЕ:
using System;
public class MainClass
{
    public static void Main()
    {
        // put your c# code here     
        int a = Convert.ToInt32(Console.ReadLine());  
        int sum = 0;       
        for (int i = 1; i <= a; i++) {
        int num = Convert.ToInt32(Console.ReadLine());
        if (num % 2 == 0 && num % 3 != 0) {        
        sum += num;
        };
        };
       Console.Write(sum);
    }
}


9. Количество чисел
ЗАДАЧА:
По данным числам, определите количество чисел, оканчивающиеся на 0.
Входные данные 
Вводится натуральное число N(N≤10 в степени 5), а затем N чисел, каждое из которых не превышает 2⋅10 в степени 4.
Выходные данные 
Вычислите количество чисел, которые оканчиваются на 0 .
Sample Input 1:
3
10
25
40
Sample Output 1:
2
Sample Input 2:
2
15
37
Sample Output 2:
0

РЕШЕНИЕ:
using System;
public class MainClass
{
    public static void Main()
    {
        // put your c# code here
        int a = Convert.ToInt32(Console.ReadLine());  
        int count = 0;       
        for (int i = 1; i <= a; i++) {
        int num = Convert.ToInt32(Console.ReadLine());
        if (num % 10 == 0) {        
        count++;
        };
        };
       Console.Write(count);
    }
}


10. Нули
ЗАДАЧА:
По данным числам, определите наличие нуля среди них.

Входные данные
Вводится натуральное число N(N≤10 в степени 5), а затем N чисел, каждое из которых не превышает 2⋅10 в степени 4.
Выходные данные
Выведите "NO", если среди введенных чисел нет ни одного из них равного нулю, или "YES" в противном случае.
Sample Input:
3
4
10
14
Sample Output:
NO

РЕШЕНИЕ:
using System;
public class MainClass
{
    public static void Main()
    {
        // put your c# code here
        int a = Convert.ToInt32(Console.ReadLine());   
        int count = 0;
        for (int i = 1; i <= a; i++) {
        int num = Convert.ToInt32(Console.ReadLine());
        if (num == 0) {        
        count++;
        }       
        };
        if (count > 0) {
        Console.Write("YES");
        } else {
        Console.Write("NO");
        };
    }
}


11. Факториал
ЗАДАЧА:
По данному натуральному числу, найдите его факториал.

Входные данные 
Вводится единственное натуральное число N, которое не превосходит 12 .
Выходные данные
Вычислите N! - произведение всех натуральных чисел от 1 до N, то есть N!=1⋅2⋅3⋅…⋅N
Sample Input:
3
Sample Output:
6

РЕШЕНИЕ:
using System;
public class MainClass
{
    public static void Main()
    {
        // put your c# code here
        int a = Convert.ToInt32(Console.ReadLine());
        int fact = 1;
        for (int i = 1; i <= a; i++) {
        fact *= i;
        };
        Console.Write(fact);
    }
}


12. Произведение на отрезке
ЗАДАЧА:
По данным двум целым числа a и b, вычислите произведение чисел на отрезке от a до b.

Формат входных данных
На вход дается два целых числа a и b (a≤b), каждое из которых по модулю не превышает 100 .
Формат выходных данных
Программа должна вычислить произведение чисел  отрезке от a до b.
Sample Input:
3
5
Sample Output:
60

РЕШЕНИЕ:
using System;
public class MainClass
{
    public static void Main()
    {
        // put your c# code here
        int a = Convert.ToInt32(Console.ReadLine());
        int b = Convert.ToInt32(Console.ReadLine());
        int fact = 1;
        for (int i = a; i <= b; i++) {
        fact *= i;
        };
        Console.Write(fact);
    }
}


13. Произведение чисел, оканчивающиеся на 7
ЗАДАЧА:
По данным двум целым числа a и b, вычислите произведение чисел на отрезке от a до b, оканчивающихся на 7 .

Формат входных данных
На вход дается два целых числа a и b, каждое из которых по модулю не превышает 150 .
Формат выходных данных
Выведите произведение чисел  отрезке от a до b, оканчивающихся на 7 .

Примечание: гарантируется, что в отрезке существует хотя бы одно число, оканчивающееся на 7. Ответ укладывается в тип данных int.
Sample Input:
1
10
Sample Output:
7

РЕШЕНИЕ:
using System;
public class MainClass
{
    public static void Main()
    {
        // put your c# code here
        int a = Convert.ToInt32(Console.ReadLine());
        int b = Convert.ToInt32(Console.ReadLine());
        int fact = 1;
        for (int i = a; i <= b; i++) {
            if (i % 10 == 7){
        fact *= i;
            }
        };
        Console.Write(fact);
    }
}


14. Произведение четных чисел
ЗАДАЧА:
По данному числу n, найдите произведение четных чисел от 1 до n. 
Входные данные 
Вводится единственное число n(2≤n≤100).
Выходные данные
Вычислите произведение четных чисел от 1 до n.
Примечание: если будет одно четное число, то вывести его.
Sample Input:
10
Sample Output:
3840

РЕШЕНИЕ:
using System;
public class MainClass
{
    public static void Main()
    {
        // put your c# code here
         int a = Convert.ToInt32(Console.ReadLine());       
        int fact = 1;
        for (int i = 1; i <= a; i++) {
            if (i % 2 == 0) {
            fact *= i;
            };        
        };
        Console.Write(fact);
    }
}


15. Сколько раз делится
ЗАДАЧА:
По данному натуральному числу a, определите, сколько раз a делится на 3 нацело.

Входные данные
Вводится натуральное число a, не превышающее 10 в степени 6.
Выходные данные
Выведите сколько раз a делится на 3 нацело.
Sample Input 1:
54
Sample Output 1:
3
Sample Input 2:
18
Sample Output 2:
2

РЕШЕНИЕ:
using System;
public class MainClass
{
    public static void Main()
    {
        // put your c# code here
        int a = Convert.ToInt32(Console.ReadLine());
        int count = 0;
        while (a % 3 == 0) {
        a = a / 3;
            count++;
        };  
        Console.Write(count);
    }
}


16. Список степеней двойки
ЗАДАЧА:
По данному числу N распечатайте все целые степени двойки, не превосходящие N.
Операцией возведения в степень пользоваться нельзя!

Входные данные
Вводится натуральное число N, не превышающее 10 в степени 6. 
Выходные данные
Выведите все целые степени двойки, не превосходящие N, в порядке возрастания.
Sample Input:
50
Sample Output:
1
2
4
8
16
32 

РЕШЕНИЕ:
using System;
public class MainClass
{
    public static void Main()
    {
        // put your c# code here
        int a = Convert.ToInt32(Console.ReadLine());
        double b = 2;  
        int stepen = 0;
        double c = 0;
        while (c <= a/2) {
            c = Math.Pow(b, stepen);
            stepen++;
            Console.WriteLine(c);
        };
    }
}


17. Двоичный логарифм
ЗАДАЧА:
По данному натуральному числу N выведите такое наименьшее целое число k, что 2 в степени k≥N.
Операцией возведения в степень пользоваться нельзя!

Входные данные
Вводится натуральное число N, не превышающее 106.
Выходные данные
Выведите такое наименьшее целое число k, что 2 в степени k≥N
Sample Input:
9
Sample Output:
4

РЕШЕНИЕ:
using System;
public class MainClass
{
    public static void Main()
    {
        // put your c# code here
        int a = Convert.ToInt32(Console.ReadLine());
        int b = 1;
        int k = 2;
        int count = 0;
        while (b < a) {
        b *= k;
        count++;   
        //Console.WriteLine(b);
        }
       Console.WriteLine(count);
    }
}


18. НОД
ЗАДАЧА:
Наибольший общий делитель (НОД) двух или нескольких чисел – это наибольшее число, на которое делятся заданные числа.
Напишите программу, которая вычисляет НОД двух чисел. Для нахождения НОД-а существует алгоритм Евклида.

Входные данные
Входная строка содержит два натуральных числа, каждое из которых не превышает 10000.
Выходные данные
Программа должна вывести одно натуральное число - НОД заданных чисел.
Sample Input:
14
21
Sample Output:
7

РЕШЕНИЕ:
using System;
public class MainClass
{
    public static void Main()
    {
        // put your c# code here
        int a = Convert.ToInt32(Console.ReadLine());
        int b = Convert.ToInt32(Console.ReadLine());
        while (a != b) {
        if (a > b) {
        a -= b;
        } else {
        b -= a;
        }
        }
        Console.WriteLine(a);
    }
}


19. Количество четверок
ЗАДАЧА:
Дано натуральное число N. Найдите количество четверок среди всех цифр числа N.

Входные данные
Вводится натуральное число N, не превышающее 109.
Выходные данные
Выведите одно число - количество четверок среди всех цифр числа N.
Sample Input 1:
425
Sample Output 1:
1
Sample Input 2:
244
Sample Output 2:
2

РЕШЕНИЕ:
using System;
public class MainClass
{
    public static void Main()
    {
        // put your c# code here
        int a = Convert.ToInt32(Console.ReadLine());
        int count = 0;
        while (a > 0) {
        int digit = a % 10;
           a /= 10;
            if (digit == 4) {
            count++;
            }
        }
        Console.WriteLine(count);
    }
}


20. Замечательное число
ЗАДАЧА:
Дано натуральное число N. Определите является ли данное число замечательным.
Число называется замечательным, если оно делится на сумму своих цифр без остатка.

Входные данные
Вводится натуральное число N, не превышающее 10 в степени 9.
Выходные данные
Выведите "YES", если число N замечательное, в противном случае "NO".
Sample Input:
1
Sample Output:
YES

РЕШЕНИЕ:
using System;
public class MainClass
{
    public static void Main()
    {
        // put your c# code here
        int a = Convert.ToInt32(Console.ReadLine());
        int b = a;
        int sum = 0;
        while (a > 0) {
        int digit = a % 10;
            sum += digit;
            a /= 10;
        };
        // Console.WriteLine(sum);
        // Console.WriteLine(b);
        if (b % sum == 0) {
        Console.WriteLine("YES");
        } else {
        Console.WriteLine("NO");
        };
    }
}


21. Обратное число
ЗАДАЧА:
Дано натуральное число N. Переставьте цифры числа в обратном порядке.

Входные данные
Вводится натуральное число N, не превышающее 10 в степени 9.
Выходные данные
Выведите число, полученное с помощью перестановки цифр числа N в обратном порядке.
Sample Input 1:
125
Sample Output 1:
521
Sample Input 2:
600
Sample Output 2:
006

РЕШЕНИЕ:
using System;
public class MainClass
{
    public static void Main()
    {
        // put your c# code here
        int a = Convert.ToInt32(Console.ReadLine());        
        string sum = "";
        while (a > 0) {
        int digit = a % 10;
            sum += ("" + digit);
            a /= 10;
        };
        Console.WriteLine(sum);
     }
}


!!! Получение обратного двоичного числа !!!
int n = Convert.ToInt32(Console.ReadLine());

while (n > 0)
{
   Console.Write(n % 2);
   n = n / 2;
}


22. Обратное двоичное число
ЗАДАЧА:
Дано натуральное число N. Выведите его представление в двоичном виде в обратном порядке.

Входные данные
Вводится натуральное число N, не превышающее 10 в степени 9.
Выходные данные
Выведите число,  представленное в двоичном виде в обратном порядке.
Sample Input 1:
4
Sample Output 1:
001
Sample Input 2:
2
Sample Output 2:
01

РЕШЕНИЕ:
using System;
public class MainClass
{
    public static void Main()
    {
        // put your c# code here
        int n = Convert.ToInt32(Console.ReadLine());
        while (n > 0)
{
        Console.Write(n % 2);
        n = n / 2;
}
    }
}


23. Перевод в двоичную систему счисления
ЗАДАЧА:
Дано натуральное число N. Переведите в двоичную систему счисления.

Входные данные
Вводится натуральное число N, не превышающее 10 в степени 9.
Выходные данные
Выведите двоичное представление числа N.
Sample Input 1:
4
Sample Output 1:
100
Sample Input 2:
2
Sample Output 2:
10

РЕШЕНИЕ:
using System;
public class MainClass
{
    public static void Main()
    {
        // put your c# code here
        int n = Convert.ToInt32(Console.ReadLine());
        string num = "";
        while (n > 0){
    int a = n % 2;  
    n = n / 2;
    // Console.WriteLine(a);  
    num = ("" + a) + num; 
}
    Console.Write(num);  
    }
}


24. Четные и не кратные трем
ЗАДАЧА:
Определите сумму элементов последовательности, которые кратны 2, но не кратны 3. Последовательность  завершается числом 0.
Числа, следующие за нулем, считывать не нужно.

Входные данные
Вводится последовательность целых чисел, оканчивающаяся числом 0 (само число 0 в последовательность не входит).
Числа по модулю не превышают 1000.
Выходные данные
Выведите сумму элементов последовательности, которые кратны 2, но не кратны 3 .
Sample Input:
4
6
10
0
20
Sample Output:
14

РЕШЕНИЕ:
using System;

public class MainClass
{
    public static void Main()
    {
        // put your c# code here
        int a = Convert.ToInt32(Console.ReadLine());
        int sum = 0;
        while (a != 0) {
        if (a % 2 == 0 && a % 3 != 0) {
        sum += a;
        }
            a = Convert.ToInt32(Console.ReadLine());
        }    
        Console.WriteLine(sum);
    }
}


25. Разность положительных и отрицательных чисел
ЗАДАЧА:
Последовательность состоит из целых чисел и завершается числом 0. Определите разность количества положительных и
отрицательных чисел последовательности.

Входные данные
Вводится последовательность целых чисел, оканчивающаяся числом 0 (само число 0 в последовательность не входит).
Числа по модулю не превышают 1000.
Выходные данные
Выведите разность количества положительных и отрицательных чисел.

Примечание: "разность" и "разница" это разные вещи. Для лучшего понимания рассмотрите примеры к задаче. 

Sample Input 1:
2
3
-8
9
0
54
23
Sample Output 1:
2
Sample Input 2:
2
3
-5
-9
-8
0
Sample Output 2:
-1

РЕШЕНИЕ:
using System;

public class MainClass
{
    public static void Main()
    {
        // put your c# code here
        int a = Convert.ToInt32(Console.ReadLine());
        int count = 0;        
        while (a != 0) {
        if (a > 0) {
        count++;
        } else {       
        count--;
        }
        a = Convert.ToInt32(Console.ReadLine());
        };        
        Console.WriteLine(count);
    }
}


26. Среднее значение последовательности
ЗАДАЧА:
Определите среднее арифметическое элементов последовательности, завершающейся числом 0. Число 0 в последовательность не входит.
Числа, следующие за нулем, считывать не нужно.

Входные данные
Вводится последовательность целых чисел. Ввод завершается, когда будет введено число 0. Числа по модулю не превышают 1000.

Выходные данные
Выведите одно число - среднее арифметическое элементов последовательности
Sample Input:
1
2
3
0
6
Sample Output:
2

РЕШЕНИЕ:
using System;

public class MainClass
{
    public static void Main()
    {
        // put your c# code here
        int a = Convert.ToInt32(Console.ReadLine());
        double num = 0;
        int count = 0;
        while (a != 0) {
        num += a;
        count++;
            a = Convert.ToInt32(Console.ReadLine());
        }
        num = num / count;
        Console.WriteLine(num);
    }
}


27. Количество элементов, которые больше предыдущего
ЗАДАЧА:
Последовательность состоит из натуральных чисел и завершается числом 0. Определите, сколько элементов этой последовательности больше
предыдущего элемента. Числа, следующие за числом 0, считывать не нужно.

Входные данные
Вводится последовательность натуральных чисел, оканчивающаяся числом 0 (само число 0 в последовательность не входит).
Числа не превышают 1000.
Выходные данные
Выведите количество  элементов последовательности больших предыдущего элемента.
Sample Input:
1
2
3
0
6
Sample Output:
2

РЕШЕНИЕ:
using System;

public class MainClass
{
    public static void Main()
    {
        // put your c# code here
        int a = Convert.ToInt32(Console.ReadLine());        
        int count = 0;
        while (a != 0) {
            int b = a;
            a = Convert.ToInt32(Console.ReadLine());       
            if (a > b) {
            count++;
            }            
        }
        Console.WriteLine(count);
    }
}


28. Изменение знака
ЗАДАЧА:
Последовательность состоит из целых чисел и завершается числом 0. Определите, сколько раз в этой последовательности меняется знак.

Входные данные
Вводится последовательность целых чисел, оканчивающаяся числом 0 (само число 0 в последовательность не входит).
Числа по модулю не превышают 1000.
Выходные данные
Выведите сколько раз в последовательности меняется знак.
Sample Input:
1
-1
-2
2
0
Sample Output:
2

РЕШЕНИЕ:
using System;

public class MainClass
{
    public static void Main()
    {
        // put your c# code here
        int a = Convert.ToInt32(Console.ReadLine());
        int count = 0;
        while (a != 0) {
            int b = a;
            a = Convert.ToInt32(Console.ReadLine());
        if (b > 0 && a < 0) {
        count++;
        } else if (b < 0 && a > 0){
        count++;
        } else {
        count = count;
        }        
        };        
        Console.WriteLine(count);
    }
}


29. Делители на отрезке
ЗАДАЧА:
На отрезке натуральных чисел от a до b (включая оба конца), найдите те числа, количество делителей у которых не меньше k. 

Входные данные
На вход подаются 3 числа: a,b,k. При этом 1≤a≤b≤10 в степени 6,1≤k≤10 в степени 4.
Выходные данные
Выведите  те числа на отрезке от a до b (включая оба конца), у которых количество делителей не меньше k.
Sample Input 1:
2
5
3
Sample Output 1:
4
Sample Input 2:
1
10
3
Sample Output 2:
4 6 8 9 10

РЕШЕНИЕ:
using System;

public class MainClass
{
    public static void Main()
    {
        // put your c# code here
        int a = Convert.ToInt32(Console.ReadLine());
        int b = Convert.ToInt32(Console.ReadLine());
        int k = Convert.ToInt32(Console.ReadLine());       
        for (int i = a; i <= b; i++) {
              // Console.WriteLine(i);
              int count = 0;
         for (int j = 1; j <= i; j++) { 
              //Console.WriteLine(i + " ");           
         if (i % j == 0) {                
               //Console.WriteLine(i + " ");  
                count++;
                // Console.WriteLine(i+ " : "+ count);
          if (count == k) {
                Console.Write(i + " ");               
                }
            }                        
                } 
        };
      
    }
}


30. Количество цифр 7
ЗАДАЧА:
Посчитать, сколько раз встречается цифра 7 в последовательности чисел от 1 до N.

Входные данные
В первой строке находится единственное натуральное число N, не превышающее 10 в встепени 9.
Выходные данные
Выведите  сколько раз встречается цифра 7 в последовательности чисел от 1 до N.
Sample Input:
20
Sample Output:
2

РЕШЕНИЕ:
using System;

public class MainClass
{
    public static void Main()
    {
        // put your c# code here
int num = Convert.ToInt32(Console.ReadLine());
        int count = 0;
        for (int i = 1; i <= num; i++) {
            int j = i;
            while (j != 0){
              if (j % 10 == 7){ 
              count++;
                 } 
               j /= 10;
                   
            }
        }
        Console.WriteLine(count);
    }
}


31. Максимальная сумма цифр.
ЗАДАЧА:
Среди натуральных чисел от 1 до N(включая N), найдите число наибольшее по сумме цифр. Вывести это число и сумму его цифр.

Входные данные
В первой строке находится единственное натуральное число N, не превышающее 10 в степени 6.
Выходные данные
Выведите  само число, которое имеет максимальную сумму цифр и саму сумму цифр на одной строке через пробел.
Если таких чисел несколько, выведите минимальное из них.
Sample Input:
20
Sample Output:
19 10

РЕШЕНИЕ:
using System;

public class MainClass
{
    public static void Main()
    {
        // put your c# code here
        int num = Convert.ToInt32(Console.ReadLine());
       int sumMax = 0; // Обязательно объявлять здесь, иначе будут все результаты сравнения в if (sum > sumMax)
        int numMax = 0; // Обязательно объявлять здесь, иначе не видна будет внешне;
        for (int i = 0; i <= num; i++){
            int j = i;
             //Console.WriteLine(j); 
            int sum = 0; // переменную обязательно объявлять в этом цикле, а не за первым циклом.
            string str = "";           
               while (j > 0){                     
                   int digit = j % 10;
                   sum += digit;  
                   str = ("" + digit) + str;
                   j /= 10;
               }
        //Console.WriteLine(sum);
            if (sum > sumMax) {               
                sumMax = sum;   
                numMax = i;
            }  
            // Console.WriteLine(str);
            //Console.WriteLine(numMax);
        }
        Console.WriteLine(numMax + " " + sumMax);
    }
}


32. Разложение на простые множители
ЗАДАЧА:
Вывести представление целого числа N в виде произведения простых чисел.

Входные данные
В первой строке находится единственное натуральное число N, где 2≤N≤2147483647.
Выходные данные
Выведите список чисел в порядке не убывания через пробел.
Примечание: 1 - НЕ простое число

Sample Input:
6
Sample Output:
2 3

РЕШЕНИЕ:
using System;

public class MainClass
{
    public static void Main()
    {
        // put your c# code here
        int num = Convert.ToInt32(Console.ReadLine());
        int a = num;
        int digit = 2;
        while (digit <= num / 2) {
            if (a % digit == 0) {
                Console.Write(digit + " ");
                a /= digit;
            } else {
                digit++;
            }
        }
        if (a == num) {
            Console.Write(num);
        }
    }
}


33. Максимальный делитель
ЗАДАЧА:
Найдите максимальный делитель числа N, отличный от N.

Входные данные
Вводится одно натуральное число N, не превышающее 10 в степени 7.
Выходные данные
Вывести максимальный делитель числа N, отличный от N.

Примечание: гарантируется, что он всегда существует.
Sample Input:
4
Sample Output:
2

РЕШЕНИЕ:
using System;

public class MainClass
{
    public static void Main()
    {
        // put your c# code here
        int num = Convert.ToInt32(Console.ReadLine());
        for (int i = num - 1; i > 0; i--) {
        if (num % i == 0){
        Console.WriteLine(i);
            break;
        }
        }
    }
}


34. Числа от 10 до 100
ЗАДАЧА:
Напишите программу, которая считывает целые числа с консоли по одному числу в строке.

Для каждого введённого числа проверить:
если число меньше 10, то пропускаем это число;
если число больше 100, то прекращаем считывать числа;
в остальных случаях вывести это число обратно на консоль в отдельной строке.

Примечание: гарантируется, что число больше 100 точно встречается!
Sample Input:
5
50
500
Sample Output:
50

РЕШЕНИЕ:
using System;

public class MainClass
{
    public static void Main()
    {
        // put your c# code here
        int num = Convert.ToInt32(Console.ReadLine());       
        while (num <= 100) {   
            if (num >= 10){           
         Console.WriteLine(num);     
            }
             num = Convert.ToInt32(Console.ReadLine());
        }             
    }
}


35. Первое чуть кратное
ЗАДАЧА:
Найдите первое число от 1 до n, кратное c, но НЕ кратное d.

Входные данные
Вводится 3 натуральных числа n,c,d, каждое из которых не превышает 10000
Выходные данные
Вывести первое число от 1 до n кратное c, но НЕ кратное d.

Sample Input:
10
2
5
Sample Output:
2

РЕШЕНИЕ:
using System;

public class MainClass
{
    public static void Main()
    {
        // put your c# code here
        int n = Convert.ToInt32(Console.ReadLine());
        int c = Convert.ToInt32(Console.ReadLine());
        int d = Convert.ToInt32(Console.ReadLine());
        int a = 0;
        for (int i = 1; i <= n; i++) {
            if (i % c == 0 && i % d != 0) {
                a = i;
                 break;
            } 
            }
        if (a ==0) {
        Console.WriteLine(" ");
        } else {
        Console.WriteLine(a);
        }
    }
}


36. Номер строки
ЗАДАЧА:
По данной последовательности строк, определите какой по счету встретится строка s.

Входные данные
Вводится строка s, а далее последовательность строк. Каждая строка по длине не превышает 30 символов.
Выходные данные
Определите каким по счету встретится строка s в данной последовательности и выведите этот номер.

Примечание: гарантируется, что данная строка встретится в последовательности.
Sample Input:
Abc
asd
asd
eqw
qdas
ABc
Cde
Abc
awr
Sample Output:
7

РЕШЕНИЕ:
using System;

public class MainClass
{
    public static void Main()
    {
        // put your c# code here
        string str = Console.ReadLine();
        string a = Console.ReadLine();
        int count = 1;
        while (a != str) {  
           count++;  
           a = Console.ReadLine();           
        } 
        Console.Write(count);
    }
}


37. Кубическое уравнение
ЗАДАЧА:
По данным числа a,b,c и d найдите  все целые решения уравнения ax в степени 3+bx в степени2+cx+d=0 на отрезке [0,1000]
и выведите их в порядке возрастания.

Входные данные
Вводятся 4 целых числа: a,b,c и d, каждое из которых не превосходит 30000.
Выходные данные
Выведите на одной строке через пробел все целые решения уравнения на отрезке [0,1000] и выведите их в порядке возрастания. 
Если на данном отрезке нет ни одного решения, то ничего выводить не нужно.
Sample Input:
0
0
7
-28
Sample Output:
4

РЕШЕНИЕ:
using System;

public class MainClass
{
    public static void Main()
    {
        // put your c# code here
         int a = Convert.ToInt32(Console.ReadLine());
         int b = Convert.ToInt32(Console.ReadLine());
         int c = Convert.ToInt32(Console.ReadLine());
         int d = Convert.ToInt32(Console.ReadLine());
        for (int x = 0; x <= 1000; x++) {
        if (a*x*x*x + b*x*x + c*x + d == 0) {
        Console.Write(x + " ");
        } else {
        Console.Write("");
        }
        }
    }
}


38. Чуть кратности
ЗАДАЧА:
Найдите все числа от 1 до n кратные c, но НЕ кратные d.

Входные данные
Вводится 3 натуральных числа n,c,d, каждое из которых не превышает 10000.
Выходные данные
Вывести все числа от 1 до n включительно, кратные c, но НЕ кратные d.
Sample Input 1:
6
2
3
Sample Output 1:
2
4
Sample Input 2:
1
1
1
Sample Output 2:

РЕШЕНИЕ:
using System;

public class MainClass
{
    public static void Main()
    {
        // put your c# code here
        int n = Convert.ToInt32(Console.ReadLine());
        int d = Convert.ToInt32(Console.ReadLine());
        int c = Convert.ToInt32(Console.ReadLine());
        for (int i = 1; i <= n; i++) {
        if (i % c != 0 && i % d ==0){
        Console.WriteLine(i);
        } else {
        Console.Write("");
        }
        }        
    }
}


39. Сложное кубическое уравнение
ЗАДАЧА:
По данным целым числам a,b,c,d и e, найдите количество целых решений уравнения (ax в степени 3+bx в степени 2+cx+d)/(x−e)=0
на отрезке [0,1000]. 

Входные данные
Вводятся 5 целых чисел: a,b,c,d и e, каждое из которых по модулю не превышает 10000.
Выходные данные
Выведите количество целых решений заданного уравнения на отрезке [0,1000].
Sample Input:
1
-5
6
0
0
Sample Output:
2

РЕШЕНИЕ:
using System;

public class MainClass
{
    public static void Main()
    {
        // put your c# code here
        int a = Convert.ToInt32(Console.ReadLine());
        int b = Convert.ToInt32(Console.ReadLine());
        int c = Convert.ToInt32(Console.ReadLine());
        int d = Convert.ToInt32(Console.ReadLine());
        int e = Convert.ToInt32(Console.ReadLine());
        int count = 0;
        for (int x = 0; x <= 1000; x++) {
        if ((a * Math.Pow(x, 3) + b * Math.Pow(x, 2) + c*x + d)/(x - e) == 0) {
            count++;        
        }
           }
         Console.WriteLine(count);
    }
}


40. Минимум
ЗАДАЧА:
Найдите минимальное среди последовательности целых чисел.

Входные данные
Вводится натуральное число N(N≤10 в степени 5), а затем N чисел, каждое из которых по модулю не превышает 10 в степени 6.
Выходные данные
Выведите минимальное из введенных чисел .
Sample Input:
3
3
1
2
Sample Output:
1

РЕШЕНИЕ:
using System;

public class MainClass
{
    public static void Main()
    {
        // put your c# code here
        int n = Convert.ToInt32(Console.ReadLine());
        int numberMin = 1000000;
        int number;
        for (int i = 0; i < n; i++) {
        number = Convert.ToInt32(Console.ReadLine());
            if (number < numberMin) {
            numberMin = number;
            }            
        }
        Console.Write(numberMin);
    }
}


41. Максимум
ЗАДАЧА:
Найдите максимальное из введенных чисел.

Входные данные
Вводится натуральное число N(N≤10 в степень 5), а затем N чисел, каждое из которых по модулю не превышает 10 в степень 6.
Выходные данные
Выведите максимальное из введенных чисел.
Sample Input:
3
3
1
2
Sample Output:
3

РЕШЕНИЕ:
using System;

public class MainClass
{
    public static void Main()
    {
        // put your c# code here
        int n = Convert.ToInt32(Console.ReadLine());
        int numberMax = -1000000;
        int number;
        for (int i = 0; i < n; i++) {
        number = Convert.ToInt32(Console.ReadLine());
            if (number > numberMax) {
            numberMax = number;
            }
        }
        Console.WriteLine(numberMax);
    }
}


42. Разница между экстремумами
ЗАДАЧА:
Найдите разницу между максимальным и минимальным числами.
Входные данные
Вводится натуральное число N(N≤10 в степени 5), а затем N чисел, каждое из которых по модулю не превышает 10 в степени 6.
Выходные данные
Выведите разницу между максимальным и минимальным числами.
Sample Input:
4
1
10
5
2
Sample Output:
9

РЕШЕНИЕ:
using System;

public class MainClass
{
    public static void Main()
    {
        // put your c# code here
        int n = Convert.ToInt32(Console.ReadLine());
        int numMax = 1000000;
        int numMin = -1000000;
        int number;
        for (int i = 1; i <= n; i++) {
        number  = Convert.ToInt32(Console.ReadLine());
            if (number <= numMax) {
            numMax = number;
            };
            if (number >= numMin) {
            numMin = number;
            }
        }
        //Console.Write(numMax - numMin);
        //Console.WriteLine(numMax);
        Console.WriteLine(numMin - numMax);
    }
}


43. Камера наблюдения
ЗАДАЧА:
Камера наблюдения регистрирует в автоматическом режиме скорость проезжающих мимо неё автомобилей.
Необходимо определить максимальную зарегистрированную скорость автомобиля.
Если скорость хотя бы одного автомобиля была меньше 30 км/ч, выведите «YES», иначе выведите «NO».

Входные данные
Программа получает на вход число проехавших автомобилей N(1<N<30), затем указываются их скорости.
Значение скорости не может быть меньше 1 и больше 300.

Выходные данные
Выведите максимальную зарегистрированную скорость автомобиля.
А затем, если скорость хотя бы одного автомобиля была меньше 30 км/ч, выведите «YES» в той же строке, иначе выведите «NO».

Sample Input 1:
4
100
80
50
80
Sample Output 1:
100 NO
Sample Input 2:
4
100
80
50
25
Sample Output 2:
100 YES

РЕШЕНИЕ:
using System;

public class MainClass
{
    public static void Main()
    {
        // put your c# code here
        int n = Convert.ToInt32(Console.ReadLine()); 
        int speed = Convert.ToInt32(Console.ReadLine()); 
        int maxSpeed = speed; 
        int minSpeed = speed; 
        for (int i = 0; i < n; i++)
        {
            if (speed > maxSpeed)
            {
                maxSpeed = speed; 
            }
            if (speed < minSpeed) 
            {
                minSpeed = speed; 
            }
            speed = Convert.ToInt32(Console.ReadLine()); 
        }
       // Console.WriteLine(maxSpeed);
       // Console.WriteLine(minSpeed);
        if (minSpeed < 30) {
        Console.WriteLine(maxSpeed + " YES");
        } else {
        Console.WriteLine(maxSpeed + " NO");
        }        
    }
}


44. Второй максимум 
Последовательность состоит из различных натуральных чисел и завершается числом 0.
Определите значение второго по величине элемента в этой последовательности. Числа, следующие за числом 0, считывать не нужно.

Входные данные
Вводится последовательность натуральных чисел, оканчивающаяся числом 0 (само число 0 в последовательность не входит).
Числа не превышают 1000.

Выходные данные
Выведите значение второго по величине элемента.
Sample Input:
1
2
3
4
5
0
Sample Output:
4

РЕШЕНИЕ:
using System;

public class MainClass
{
    public static void Main()
    {
        // put your c# code here
        int num = Convert.ToInt32(Console.ReadLine());
        int max = 0;
        int lowMax = 0;   
        
        while (num != 0) { 
        if (num >= max){
        lowMax = max;
        max = num;
        }
        if (lowMax < num && num < max) {
        lowMax = num;
        }            
        num = Convert.ToInt32(Console.ReadLine()); 
            //Console.WriteLine(max);
        } 
            //Console.WriteLine(max);
        Console.WriteLine(lowMax);
        }
    }


45. Палиндром?
ЗАДАЧА:
По данному числу определите, является ли оно палиндромом?
Входные данные
Вводится одно натуральное число n, не превышающее 10 в степени 9.
Выходные данные
Вывести "YES", если число является палиндромом , в противном случае - "NO".

Примечание: гарантируется, что число не оканчивается на ноль.

Sample Input 1:
25
Sample Output 1:
NO
Sample Input 2:
545
Sample Output 2:
YES

РЕШЕНИЕ:
using System;

public class MainClass
{
    public static void Main()
    {
        // put your c# code here
int n = Convert.ToInt32(Console.ReadLine());
        string str = "";     
        int num = n;
        while (num > 0){
            str += (num % 10);
            num /= 10;
        }
        
        num = Convert.ToInt32(str);
        if (n == num) {
            Console.WriteLine("YES");
        } else {
            Console.WriteLine("NO");
        }         
    }
}


46. 5 и 7
ЗАДАЧА:
Из данного числа выбросите цифры 5 и 7 , при этом порядок остальных цифр при этом не меняется.
Входные данные
Вводится одно натуральное число n, не превышающее 10000.
Выходные данные
Вывести число n, без цифр 5 и 7 .

Примечание: гарантируется, что число содержит хотя бы 1 символ, отличный от 5 и 7 .

Sample Input:
27
Sample Output:
2

РЕШЕНИЕ:
using System;
public class MainClass
{
    public static void Main()
    {
        // put your c# code here
        int n = Convert.ToInt32(Console.ReadLine());
        int num = 0;
        while (n != 0) {
        int digit = n % 10;
           // Console.WriteLine(digit);
        if (digit == 5 || digit == 7) {
             num = num;
            } else {
          num = num * 10 + digit; 
        }
            n /= 10;            
}
     //  Console.WriteLine(num);
        
        int numLast = 0;
        while (num != 0) {
        int digitLast = num % 10;
     numLast = numLast * 10 + digitLast; 
          num /= 10;            
}
    Console.WriteLine(numLast);
        }}
       
47. Количество минимумов
ЗАДАЧА:
Найдите количество чисел, которые равны минимальному элементу в последовательности.
Входные данные
Вводится натуральное число N(N≤10 в степени 5), а затем N чисел. Все числа по модулю не превышают 10 в степени 6.
Выходные данные
Выведите количество чисел, которые равны минимальному элементу в последовательности.
Sample Input:
5
13
12
10
31
10
Sample Output:
2

РЕШЕНИЕ:
using System;

public class MainClass
{
    public static void Main()
    {
        // put your c# code here
        int n = Convert.ToInt32(Console.ReadLine());
        int numberMin = 1000000;
        int number;
        int count = 0;
        for (int i = 0; i < n; i++) {
        number = Convert.ToInt32(Console.ReadLine());            
            if (number < numberMin) {
            numberMin = number;
                count = 1;
            } else if (number == numberMin) {
                count++;
                }
        }         
       // Console.WriteLine(numberMin);
        
        Console.WriteLine(count);
    }
}


48. Степень числа
ЗАДАЧА:
Для целых чисел a и n вычислить a в степени n.
Входные данные
Вводятся два целых числа - a и n , при этом 1≤a<100,0≤n≤20. 
Выходные данные
Выводится одно число - a в степени n.

Примечание: гарантируется, что ответ не больше 2⋅10 в степени 9. 

Sample Input:
2
3
Sample Output:
8

РЕШЕНИЕ:
using System;

public class MainClass
{
    public static void Main()
    {
        // put your c# code here
        int a = Convert.ToInt32(Console.ReadLine());
        int n = Convert.ToInt32(Console.ReadLine());
        int sum = 1;
        while (n != 0) {
        sum *= a;
            n--;
           // Console.WriteLine(n);
            //Console.WriteLine(sum);
        }
        Console.WriteLine(sum);
    }
}


49. Цифровой корень
ЗАДАЧА:
ифровой корень натурального числа — это цифра, полученная в результате итеративного процесса суммирования цифр,
на каждой итерации которого для подсчета суммы цифр берут результат, полученный на предыдущей итерации.
Этот процесс повторяется до тех пор, пока не будет получена одна цифра.

Например цифровой корень 65536 это 7 , потому что 6+5+5+3+6=25 и 2+5=7 . 
По данному числу определите его цифровой корень.
Входные данные
Вводится одно натуральное число n, не превышающее 10 в степени 7.
Выходные данные
Вывести цифровой корень числа n.
Sample Input 1:
10
Sample Output 1:
1
Sample Input 2:
65536
Sample Output 2:
7

РЕШЕНИЕ:
using System;

public class MainClass
{
    public static void Main()
    {
        // put your c# code here
        int num = Convert.ToInt32(Console.ReadLine());
         int sum = 0;
         int sumNext = 0;
         int sumLast = 0;  
        
            while (num != 0) {
                sum += num % 10;
                num /= 10;
            }         
        
        //Console.WriteLine(sum);
            while (sum != 0)
            {
               sumNext += sum % 10;
                sum /= 10;
            }
         //Console.WriteLine(sumNext);
        
        while (sumNext != 0)
            {
               sumLast += sumNext % 10;
                sumNext /= 10;
            }
         Console.WriteLine(sumLast);
    }
}


50. Количество нулей
ЗАДАЧА:
По данным числам, определите количество нулей.  
Входные данные 
Вводится натуральное число N(N≤10 в степени 5), а затем N чисел, каждое из которых не превышает 2∗10 в степени 4.
Выходные данные 
Вычислите количество нулей среди введенных чисел.
Sample Input 1:
4
5
2
0
4
Sample Output 1:
1
Sample Input 2:
4
502
980
0
45
Sample Output 2:
1

РЕШЕНИЕ:
using System;

public class MainClass
{
    public static void Main()
    {
        // put your c# code here
        int n = Convert.ToInt32(Console.ReadLine());
        int count = 0;
        while (n != 0) {
        int num = Convert.ToInt32(Console.ReadLine());
            if (num == 0) {
            count++;
            }
            n--;
        }
        Console.WriteLine(count);
    }
}


51. Самое большое число, кратное 7
ЗАДАЧА:
Найдите самое большее число на отрезке от a до b, кратное 7.
Входные данные 
Вводится целых числа a и b(a≤b) , каждое из которых по модулю не превышает 2∗10 в степени 4.
Выходные данные 
Найдите самое большее число на отрезке от a до b, кратное 7 , или выведите "NO" - если таковых нет.
Sample Input 1:
1
100
Sample Output 1:
98
Sample Input 2:
1
6
Sample Output 2:
NO

РЕШЕНИЕ:
using System;

public class MainClass
{
    public static void Main()
    {
        // put your c# code here
        int a = Convert.ToInt32(Console.ReadLine());
        int b = Convert.ToInt32(Console.ReadLine());
        int count = 0;       
        for (int i = b; i >= a; i--) {
            
              if (i % 7 == 0) {                    
          Console.WriteLine(i);
                 break; 
                } 
            
            if (Math.Abs(b - a) < 7) {              
                if (i % 7 == 0) {
                Console.WriteLine(i);  
                    break;
                }
                if (i == a) {                
                Console.WriteLine("NO");
                }               
            }            
        }        
    }
}


ЗАДАЧИ НА СТРОКИ И СИМВОЛЫ:


1. Цифра
ЗАДАЧА:
Определите является ли данный символ цифрой или нет.
Входные данные
Задан единственный символ c.
Выходные данные
Необходимо вывести "YES", если символ является цифрой, и "NO" - в противном случае.
Sample Input 1:
5
Sample Output 1:
YES
Sample Input 2:
S
Sample Output 2:
NO

РЕШЕНИЕ:
using System;

public class MainClass
{
    public static void Main()
    {
        // put your c# code here
        char c = Convert.ToChar(Console.ReadLine());
        if (c >= '0' && c <= '9') 
{
   Console.WriteLine("YES");
} else {
   Console.WriteLine("NO");
}       
    }
}


2. Часть алфавита
ЗАДАЧА:
По заданной строчной букве латинского алфавита, выведите все строчные буквы латинского алфавита, начиная от начала до заданной буквы.
Входные данные
Задан единственный символ c - строчная буква латинского алфавита.
Выходные данные
Выведите алфавит латинского алфавита, начиная от начала и заканчивая символом c на одной строке через пробел.
Sample Input 1:
c
Sample Output 1:
a b c
Sample Input 2:
a
Sample Output 2:
a

РЕШЕНИЕ:
using System;

public class MainClass
{
    public static void Main()
    {
        // put your c# code here
        char c = Convert.ToChar(Console.ReadLine());
        for (char i = 'a'; i <= c; i++) {
        Console.Write(i + " ");
        }
    }
}


3. Часть алфавита
ЗАДАЧА:
По заданной строчной букве латинского алфавита, выведите все строчные буквы латинского алфавита,
начиная от заданной буквы до конца алфавита.
Входные данные
Задан единственный символ c - строчная буква латинского алфавита.
Выходные данные
Выведите алфавит латинского алфавита от символа c до конца алфавита на одной строке через пробел.
Sample Input:
x
Sample Output:
x y z

РЕШЕНИЕ:
using System;

public class MainClass
{
    public static void Main()
    {
        // put your c# code here
        char c = Convert.ToChar(Console.ReadLine());
        for (char i = c; i <= 'z'; i++) {
        Console.Write(i + " ");
        }
    }
}


4. Изменить регистр символа 
Измените регистр символа, если он был латинской буквой: сделайте его заглавным, если он был строчной буквой и наоборот.
Входные данные
Задан единственный символ латинского алфавита c. 
Выходные данные
Необходимо вывести получившийся символ.
Sample Input 1:
a
Sample Output 1:
A
Sample Input 2:
Q
Sample Output 2:
q

РЕШЕНИЕ:
using System;

public class MainClass
{
    public static void Main()
    {
        // put your c# code here
       int code;
       char c = Convert.ToChar(Console.ReadLine());
       if (c >= 'a' && c <= 'z') {
            code =  (int)c - 32;
       Console.WriteLine((char)code);
       } else if (c >= 'A' && c <= 'Z') {
           code =  (int)c + 32;
       Console.WriteLine((char)code);
       } 
    }
}


5. Количество слов
ЗАДАЧА:
ана строка, содержащая пробелы. Найдите, сколько в ней слов.
Слово – это последовательность не пробельных символов. Слова разделены одним пробелом, первый и последний символ строки – не пробел.

Входные данные
На вход подается строка, длина которой не превышает 1000.
Выходные данные
Необходимо вывести количество слов в строке.
Sample Input:
Я люблю макароны!
Sample Output:
3

РЕШЕНИЕ:
using System;

public class MainClass
{
    public static void Main()
    {
        // put your c# code here
        string str = Console.ReadLine();
        int count = 0;
        int len = str.Length;
        for (int i = 0; i < len; i++) {
        if (str[i] == ' ') {
        count++;
        }
        }
        Console.WriteLine(count + 1);          
    }
}


6.
